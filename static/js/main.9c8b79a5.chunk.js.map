{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","hisory","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c8b79a5.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  \r\nexport default firebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: { name, value }} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            if (newAccount) {\r\n                await createUserWithEmailAndPassword(authService,email,password);\r\n            } else {\r\n                await signInWithEmailAndPassword(authService,email,password);\r\n            }\r\n        }   catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { signInWithPopup, GithubAuthProvider, GoogleAuthProvider } from \"firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target: {name}} = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await signInWithPopup(authService, provider);\r\n    };\r\n    return(\r\n        <div>\r\n            <div className=\"authContainer\">\r\n                <FontAwesomeIcon\r\n                    icon={faTwitter}\r\n                    color={\"#04AAFF\"}\r\n                    size=\"3x\"\r\n                    style={{ marginBottom: 30 }}\r\n                />\r\n                <AuthForm />\r\n                <div className=\"authBtns\">\r\n                    <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                        Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                    </button>\r\n                    <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                        Continue with GitHub <FontAwesomeIcon icon={faGithub} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};   \r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState }from \"react\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n            if (nweetObj.attachmentUrl !== \"\") {\r\n                await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService,`nweets/${nweetObj.id}`), {\r\n            text:newNweet,\r\n        })\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Edit your nweet\" \r\n                            value={newNweet} \r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n    \r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit =  async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n            await uploadString(attachmentRef, attachment, \"data_url\");\r\n            attachmentUrl = await getDownloadURL(attachmentRef);\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{ value },\r\n        } = event;\r\n        setNweet(value)\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{ files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (theFile) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input \r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                  opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect( () => {\r\n        onSnapshot (\r\n        query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\r\n        (snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n        setNweets(nweetArray);\r\n        }));\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const hisory = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        hisory.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{ value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName:newDisplayName,\r\n            });\r\n        }\r\n        refreshUser();\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    onChange={onChange} \r\n                    type=\"text\" \r\n                    autoFocus\r\n                    placeholder=\"Display name\" \r\n                    value={newDisplayName} \r\n                    className=\"formInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Update Profile\" \r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", \r\n                justifyContent: \"center\", \r\n                marginTop: 50 \r\n            }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link \r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10}}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile` \r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { updateProfile } from \"firebase/auth\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect (() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => updateProfile(user, args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => updateProfile(user, args),\n    });\n  }\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj}\n        />\n      ) : \"Initializing...\"}\n    </>\n  ) \n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}